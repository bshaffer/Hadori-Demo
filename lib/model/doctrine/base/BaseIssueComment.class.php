<?php

/**
 * BaseIssueComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $issue_id
 * @property integer $author_id
 * @property clob $body
 * @property Issue $Issue
 * @property sfGuardUser $Author
 * 
 * @method integer      getIssueId()   Returns the current record's "issue_id" value
 * @method integer      getAuthorId()  Returns the current record's "author_id" value
 * @method clob         getBody()      Returns the current record's "body" value
 * @method Issue        getIssue()     Returns the current record's "Issue" value
 * @method sfGuardUser  getAuthor()    Returns the current record's "Author" value
 * @method IssueComment setIssueId()   Sets the current record's "issue_id" value
 * @method IssueComment setAuthorId()  Sets the current record's "author_id" value
 * @method IssueComment setBody()      Sets the current record's "body" value
 * @method IssueComment setIssue()     Sets the current record's "Issue" value
 * @method IssueComment setAuthor()    Sets the current record's "Author" value
 * 
 * @package    skeleton
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseIssueComment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('issue_comment');
        $this->hasColumn('issue_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('body', 'clob', null, array(
             'type' => 'clob',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Issue', array(
             'local' => 'issue_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as Author', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}