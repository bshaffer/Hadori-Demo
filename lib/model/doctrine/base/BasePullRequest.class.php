<?php

/**
 * BasePullRequest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $author_id
 * @property string $body
 * @property enum $status
 * @property sfGuardUser $Author
 * @property Doctrine_Collection $Comments
 * 
 * @method integer             getAuthorId()  Returns the current record's "author_id" value
 * @method string              getBody()      Returns the current record's "body" value
 * @method enum                getStatus()    Returns the current record's "status" value
 * @method sfGuardUser         getAuthor()    Returns the current record's "Author" value
 * @method Doctrine_Collection getComments()  Returns the current record's "Comments" collection
 * @method PullRequest         setAuthorId()  Sets the current record's "author_id" value
 * @method PullRequest         setBody()      Sets the current record's "body" value
 * @method PullRequest         setStatus()    Sets the current record's "status" value
 * @method PullRequest         setAuthor()    Sets the current record's "Author" value
 * @method PullRequest         setComments()  Sets the current record's "Comments" collection
 * 
 * @package    skeleton
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePullRequest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pull_request');
        $this->hasColumn('author_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('body', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'open',
              1 => 'closed',
              2 => 'pending',
             ),
             'notnull' => true,
             'default' => 'pending',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as Author', array(
             'local' => 'author_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('PullRequestComment as Comments', array(
             'local' => 'id',
             'foreign' => 'pull_request_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}